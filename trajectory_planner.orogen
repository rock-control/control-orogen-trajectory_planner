name "trajectory_planner"

import_types_from "base"
import_types_from "trajectory_plannerTypes.hpp"
using_library "trajectory_planner"

task_context "JointsInterpolatorTask" do
  needs_configuration

  property("end_condition","int").
  doc("End condition 0 for zero acc, 1 for zero vel")

  property("cycle_time", "double").
  doc("Cycle time of the joint interpolar send commands task")
  
  property("speed_level", "int").
  doc("Percentage of max attainable speed or acceleration to be used for caculation of synchronisation time")
  
  property("acc_max", "double").
  doc("Max acceleration value in rad/s2 or m/s2 for all joints")
  

  input_port("in_joints_traj", "base/JointsTrajectory").
  doc("Receives the sparse trajectory points from the planner or other higher level task")
  
  output_port("out_joint_traj", "base/JointsTrajectory").
  doc("Outputs interpolated trajectory points")

  port_driven :in_joints_traj

end

task_context "DummyTask" do
  needs_configuration
   
  property("numberOfJoints", "int"). 
  doc("Number of Joints")
   
  property("numberOfPoints", "int").
  doc("Number of trajectory points, minimum 3")
  
  output_port("out_joint_traj", "base/JointsTrajectory").
  doc("Outputs sparse trajectory points")

  periodic 1.0
end


